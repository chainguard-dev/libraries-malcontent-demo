name: scanmalware

on:
  pull_request:
    types: [opened]
  workflow_dispatch:

env:
  MALCONTENT_IMAGE: "cgr.dev/chainguard/malcontent@sha256:fdfca44c401a5ca98af51292a821278644895bc1963f7a76a733d76647ff0ede"
  MALCONTENT_SAMPLES_REPO_URL: "https://github.com/chainguard-dev/malcontent-samples.git"
  MALCONTENT_SAMPLES_DIR: "${{ github.workspace }}/malcontent-samples"
  MALCONTENT_ULTRALYTICS_SAMPLES_DIR: "${{ github.workspace }}/malcontent-samples/python/2024.ultralytics"
  CONTAINER_OUTPUT_FILE: "/home/nonroot/ultralytics-malcontent-diff-v8.3.40-v8.3.41.json"
  LOCAL_OUTPUT_DIR: "${{ github.workspace }}/scans"
  LOCAL_OUTPUT_FILE: "${{ github.workspace }}/scans/ultralytics-malcontent-diff-v8.3.40-v8.3.41.json"

permissions: {}

jobs:
  python:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      security-events: write
      contents: write
      packages: write
      id-token: write

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - uses: octo-sts/action@6177b4481c00308b3839969c3eca88c96a91775f # v1.0.0
        id: octo-sts
        with:
          scope: chainguard-dev/libraries-malcontent-demo
          identity: scanmalware
          
      - name: Run malware test action
        uses: chainguard-dev/malcontent-bot@main  # Pin this to a commit SHA if needed
        with:
          malcontent-image: "cgr.dev/chainguard/malcontent@sha256:fdfca44c401a5ca98af51292a821278644895bc1963f7a76a733d76647ff0ede"
          before-dir: ${{ github.workspace }}/malcontent-samples/python/2024.ultralytics/v8.3.40
          after-dir: ${{ github.workspace }}/malcontent-samples/python/2024.ultralytics/v8.3.41
