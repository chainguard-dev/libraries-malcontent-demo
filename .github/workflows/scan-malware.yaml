name: scan-malware

on:
  workflow_dispatch: # Allows manual triggering

env:
  MALCONTENT_IMAGE: "cgr.dev/chainguard/malcontent@sha256:fdfca44c401a5ca98af51292a821278644895bc1963f7a76a733d76647ff0ede"
  REPO_URL: "https://github.com/chainguard-dev/malcontent-samples.git"
  LOCAL_REPO_DIR: "malcontent-samples"
  ULTRALYTICS_SUBDIR: "python/2024.ultralytics"
  
jobs:
  scan-python-malware:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      contents: write
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.ref }} # Ensures we stay on the triggered branch
          fetch-depth: 0         # Necessary for pushing changes

      - name: Clone malcontent-samples repo
        run: |
          if [ -d "${LOCAL_REPO_DIR}" ]; then
            echo "[*] Using existing local repo at ${LOCAL_REPO_DIR}"
          else
            echo "[*] Cloning repository (shallow)..."
            git clone --depth=1 --branch main --single-branch "${REPO_URL}" "${LOCAL_REPO_DIR}"
          fi

      - name: 'Pull Malcontent Image'
        run: |
          docker pull "${{ env.MALCONTENT_IMAGE }}"

      
      - name: Set up full path
        id: paths
        run: |
          FULLBASEPATH="${GITHUB_WORKSPACE}/${LOCAL_REPO_DIR}/${ULTRALYTICS_SUBDIR}"
          echo "FULLBASEPATH=$FULLBASEPATH"
          echo "fullpath=$FULLBASEPATH" >> "$GITHUB_OUTPUT"

      - name: Analyze Ultralytics v8.3.40
        run: |
          docker run --rm -v "${{ steps.paths.outputs.fullpath }}:/home/nonroot/malcontent/" \
            "${MALCONTENT_IMAGE}" \
            --min-risk=medium \
            --stats \
            analyze /home/nonroot/malcontent/v8.3.40
          
      - name: Analyze Ultralytics v8.3.41
        run: |
          docker run --rm -v "${{ steps.paths.outputs.fullpath }}:/home/nonroot/malcontent/" \
            "${MALCONTENT_IMAGE}" \
            --include-data-files=true \
            --min-risk=medium \
            --quantity-increases-risk=true \
            --stats \
            analyze /home/nonroot/malcontent/v8.3.41

      - name: Diffing Ultralytics v8.3.40 ↔ v8.3.41
        run: |
          CONTAINER_NAME="malcontent-diff-temp"
          OUTPUT_FILE="/home/nonroot/ultralytics-malcontent-diff-v8.3.40-v8.3.41.json"
          LOCAL_OUTPUT_DIR="${GITHUB_WORKSPACE}/scans"
          LOCAL_OUTPUT_PATH="${LOCAL_OUTPUT_DIR}/ultralytics-malcontent-diff-v8.3.40-v8.3.41.json"

          mkdir -p "$LOCAL_OUTPUT_DIR"

          docker run --name "$CONTAINER_NAME" \
            -v "${{ steps.paths.outputs.fullpath }}:/home/nonroot/malcontent/" \
            "$MALCONTENT_IMAGE" \
            --min-risk=high \
            --format=json \
            --output="$OUTPUT_FILE" \
            diff --file-risk-increase=true \
            /home/nonroot/malcontent/v8.3.40 /home/nonroot/malcontent/v8.3.41

          docker cp "$CONTAINER_NAME:$OUTPUT_FILE" "$LOCAL_OUTPUT_PATH"
          docker rm "$CONTAINER_NAME" > /dev/null

          echo "[*] Output saved to scans/ultralytics-malcontent-diff-v8.3.40-v8.3.41.json"
          echo "[✔] Done"

      - name: Commit and push updated JSON file
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          git add scans/ultralytics-malcontent-diff-v8.3.40-v8.3.41.json
          
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update malware diff JSON: v8.3.40 → v8.3.41"
            git push origin "${GITHUB_REF#refs/heads/}"
          fi
